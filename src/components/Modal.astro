---
// src/components/Modal.astro
const { id, triggerId, bgColor = "bg-white" } = Astro.props;
---

<div
    id={id}
    class="js-modal fixed inset-0 flex items-center justify-center z-50 bg-black/30 backdrop-blur-sm opacity-0 pointer-events-none transition-opacity duration-300"
    data-trigger-id={triggerId}
>
    <div
        id={`content-${id}`}
        class={`${bgColor} rounded-lg py-[90px] px-[100px] w-11/12 max-w-[70%] relative transform scale-95 opacity-0 transition-all duration-300 max-h-[90vh] overflow-y-auto`}
    >
        <button
        id={`close-${id}`}
        class="js-modal-close fixed top-2 right-2 text-white text-4xl font-bold cursor-pointer"
        >
        âœ•
        </button>
        <div>
        <slot />
        </div>
    </div>
</div>

<script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
        // Find ALL modal elements
        const modals = document.querySelectorAll('.js-modal[data-trigger-id]');
        
        modals.forEach(modal => {
        // Get IDs from data attributes
        const triggerId = modal.dataset.triggerId;
        const modalId = modal.id;
        
        // Get elements
        const trigger = document.querySelector(triggerId);
        const modalContent = document.getElementById(`content-${modalId}`);
        const closeBtn = document.getElementById(`close-${modalId}`);

        if (!trigger || !modalContent || !closeBtn) {
            console.error(`Missing elements for modal: ${modalId}`);
            return;
        }

        const showModal = () => {
            modal.classList.remove("pointer-events-none", "opacity-0");
            modal.classList.add("opacity-100");
            modalContent.classList.remove("scale-95", "opacity-0");
            modalContent.classList.add("scale-100", "opacity-100");
        };

        const hideModal = () => {
            modal.classList.remove("opacity-100");
            modal.classList.add("opacity-0");
            modalContent.classList.remove("scale-100", "opacity-100");
            modalContent.classList.add("scale-95", "opacity-0");
            setTimeout(() => {
            modal.classList.add("pointer-events-none");
            }, 300);
        };

        trigger.addEventListener("click", showModal);
        closeBtn.addEventListener("click", hideModal);
        modal.addEventListener("click", (e) => {
            if (e.target === modal) hideModal();
        });
        });
        
        // Add global ESC key listener
        document.addEventListener("keydown", (e) => {
        if (e.key === "Escape") {
            // Find any open modal and close it
            document.querySelectorAll('.js-modal').forEach(modal => {
            if (!modal.classList.contains("opacity-0")) {
                const modalId = modal.id;
                const modalContent = document.getElementById(`content-${modalId}`);
                
                modal.classList.remove("opacity-100");
                modal.classList.add("opacity-0");
                modalContent.classList.remove("scale-100", "opacity-100");
                modalContent.classList.add("scale-95", "opacity-0");
                
                setTimeout(() => {
                modal.classList.add("pointer-events-none");
                }, 300);
            }
            });
        }
        });
    });
</script>